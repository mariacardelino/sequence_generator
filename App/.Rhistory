library(shiny); source('R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator/RUN.R')
source('R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator/RUN.R')
# Change the wd to the folder the app is in
v <- getwd()
source('R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator/RUN.R')
# Change the wd to the folder the app is in
v <- getwd()
setwd(v) #redundant; can delete
load("App/Mapping/map.Rdata")  # loads 'df' (96-positions and orders) and 'map' (384-positions)
source('R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator/RUN.R')
# Change the wd to the folder the app is in
v <- getwd()
setwd(v) #redundant; can delete
load("App/Mapping/map.Rdata")  # loads 'df' (96-positions and orders) and 'map' (384-positions)
# Change the wd to the folder the app is in
v <- getwd()
setwd(v) #redundant; can delete
load("R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator/App/Mapping/map.Rdata")  # loads 'df' (96-positions and orders) and 'map' (384-positions)
inventory_file_path <<- "250530_CLU0007-2_Plate_Loading_Order.xlsx"
qaqcs <- read_excel(inventory_file_path, sheet = "QAQCs")
load("R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator/App/Mapping/map.Rdata")  # loads 'df' (96-positions and orders) and 'map' (384-positions)
setwd(R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator) #redundant; can delete
setwd(R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator) #redundant; can delete
setwd("R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator") #redundant; can delete
# Change the wd to the folder the app is in
v <- getwd()
setwd("R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator") #redundant; can delete
load("R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator/App/Mapping/map.Rdata")  # loads 'df' (96-positions and orders) and 'map' (384-positions)
inventory_file_path <<- "250530_CLU0007-2_Plate_Loading_Order.xlsx"
# Change the wd to the folder the app is in
v <- getwd()
setwd("R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator") #redundant; can delete
load("R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator/App/Mapping/map.Rdata")  # loads 'df' (96-positions and orders) and 'map' (384-positions)
inventory_file_path <<- "250530_CLU0007-2_Plate_Loading_Order.xlsx"
qaqcs <- read_excel(inventory_file_path, sheet = "QAQCs")
inventory_file_path <<- "250530_CLU0007-2_Plate_Loading_Order.xlsx"
qaqcs <- read_excel(inventory_file_path, sheet = "QAQCs")
warnings()
source('RUN.R')
source('RUN.R')
# List of required packages
required_packages <- c(
"openxlsx", "shinyjs", "tools",
"shiny", "readr", "dplyr",
"plotly", "readxl"
)
# Install any that are missing
for (pkg in required_packages) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
} else {
library(pkg, character.only = TRUE)
}
}
# Change the wd to the folder the app is in
v <- getwd()
setwd(v) #redundant; can delete
load("App/Mapping/map.Rdata")  # loads 'df' (96-positions and orders) and 'map' (384-positions)
inventory_file_path <<- "250530_CLU0007-2_Plate_Loading_Order.xlsx"
qaqcs <- read_excel(inventory_file_path, sheet = "QAQCs")
samples <- read_excel(inventory_file_path, sheet = "Samples")
# remove extra cols
qaqcs <- qaqcs %>%
select(-QAQC_RN)
# As character
samples$RackNum <- as.character(samples$RackNum)
## JOIN QAQCS and SAMPLE DATA TO inventory
inventory <- bind_rows(qaqcs, samples)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
source('RUN.R')
View(samples)
View(qaqcs)
View(samples)
View(samples)
View(qaqcs)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
View(samples)
View(samples)
View(qaqcs)
View(qaqcs)
View(map)
View(map)
View(df)
View(df)
source('RUN.R')
source('RUN.R')
# List of required packages
required_packages <- c(
"openxlsx", "shinyjs", "tools",
"shiny", "readr", "dplyr",
"plotly", "readxl"
)
# Install any that are missing
for (pkg in required_packages) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
} else {
library(pkg, character.only = TRUE)
}
}
# Change the wd to the folder the app is in - MORE ROBUST changed 5/30
v <- getwd()
setwd(v)
load("App/Mapping/map.Rdata")  # loads 'df' (96-positions and orders) and 'map' (384-positions)
# List of required packages
required_packages <- c(
"openxlsx", "shinyjs", "tools",
"shiny", "readr", "dplyr",
"plotly", "readxl"
)
function (x, df1, df2, ncp, log = FALSE)
{
if (missing(ncp))
.Call(C_df, x, df1, df2, log)
else .Call(C_dnf, x, df1, df2, ncp, log)
}
# Install any that are missing
for (pkg in required_packages) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
} else {
library(pkg, character.only = TRUE)
}
}
# Change the wd to the folder the app is in - MORE ROBUST changed 5/30
v <- getwd()
setwd(v)
load("App/Mapping/map.Rdata")  # loads 'df' (96-positions and orders) and 'map' (384-positions)
inventory_file_path <<- "TestCopy_250409_CLU0120_Plate_Loading_Order_Updated-Again.xlsx"
qaqcs <- read_excel(inventory_file_path, sheet = "QAQCs")
# List of required packages
required_packages <- c(
"openxlsx", "shinyjs", "tools",
"shiny", "readr", "dplyr",
"plotly", "readxl"
)
# Install any that are missing
for (pkg in required_packages) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
} else {
library(pkg, character.only = TRUE)
}
}
# Change the wd to the folder the app is in - MORE ROBUST changed 5/30
v <- getwd()
setwd(v)
load("App/Mapping/map.Rdata")  # loads 'df' (96-positions and orders) and 'map' (384-positions)
inventory_file_path <<- "TestCopy_250409_CLU0120_Plate_Loading_Order_Updated-Again.xlsx"
qaqcs <- read_excel(inventory_file_path, sheet = "QAQCs")
# List of required packages
required_packages <- c(
"openxlsx", "shinyjs", "tools",
"shiny", "readr", "dplyr",
"plotly", "readxl"
)
# Install any that are missing
for (pkg in required_packages) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
} else {
library(pkg, character.only = TRUE)
}
}
# Change the wd to the folder the app is in - MORE ROBUST changed 5/30
v <- getwd()
# Change the wd to the folder the app is in - MORE ROBUST changed 5/30
v <- getwd()
setwd("R:/diwalke/LC/Run_Lists/CLU0120 (MEC)/Sequence_Generator")
# Change the wd to the folder the app is in - MORE ROBUST changed 5/30
#v <- getwd()
setwd("R:/diwalke/LC/Run_Lists/CLU0120 (MEC)/Sequence_Generator")
load("App/Mapping/map.Rdata")  # loads 'df' (96-positions and orders) and 'map' (384-positions)
inventory_file_path <<- "TestCopy_250409_CLU0120_Plate_Loading_Order_Updated-Again.xlsx"
qaqcs <- read_excel(inventory_file_path, sheet = "QAQCs")
samples <- read_excel(inventory_file_path, sheet = "Samples")
# remove extra cols
qaqcs <- qaqcs %>%
select(-QAQC_RN)
# As character
samples$RackNum <- as.character(samples$RackNum)
## JOIN QAQCS and SAMPLE DATA TO CLU0120_inventory
inventory <- bind_rows(qaqcs, samples)
View(inventory)
source('R:/diwalke/LC/Run_Lists/CLU0007-2 (PIAMA)/Sequence_Generator/RUN.R')
library(shiny); source('RUN.R')
